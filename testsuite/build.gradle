plugins {
    id 'org.jetbrains.kotlin.multiplatform'
    id 'org.jetbrains.kotlin.plugin.serialization'
}

kotlin {
    jvm {
      //  jvmToolchain(8) // Java8 minimum ok?
        withJava()
        testRuns["test"].executionTask.configure {
            useJUnitPlatform()
        }
    }
    def hostOs = System.getProperty("os.name")
    def isMingwX64 = hostOs.startsWith("Windows")
    def nativeTarget
    if (hostOs == "Mac OS X") nativeTarget = macosX64('native')
    else if (hostOs == "Linux") nativeTarget = linuxX64("native")
    else if (isMingwX64) nativeTarget = mingwX64("native")
    else throw new GradleException("Host OS is not supported in Kotlin/Native.")

    sourceSets {
//        commonMain {
//        }
//        commonTest {
////            dependencies {
////                implementation kotlin('test')
////            }
//        }
        jvmMain {
            dependencies {
                api project(":kompack-base")
                api project(":kompack-kotlin-serialization")
                implementation("com.ensarsarajcic.kotlinx:serialization-msgpack:0.5.4")
                implementation 'org.jetbrains.kotlinx:kotlinx-serialization-json:1.5.0'
            }
        }
        jvmTest {
            dependencies {
                implementation kotlin('test')
            }
        }
//        nativeMain {
//        }
//        nativeTest {
//        }
    }

    nativeTarget.with {
        binaries {
            executable {
                baseName = "testsuite"
                entryPoint = 'main'
            }
        }

    }
}


